{
	"info": {
		"_postman_id": "cec7bf5d-b241-4613-8542-a2d853ba0190",
		"name": "RadancyBankTestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Actions",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9cea01a1-d4fd-42d4-8baa-6c94fdabe7fb",
								"exec": [
									"pm.environment.set(\"port\", 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2d6f231c-e795-4b20-b4ce-e99766dfdf51",
								"exec": [
									"var userBody = pm.response.json();\r",
									"pm.environment.set(\"userId\", userBody.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"New\",\r\n    \"LastName\": \"User\",\r\n    \"Email\": \"test2.user@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/user/create",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d4830b09-2a2e-4f92-9ce3-69c138f02942",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Delete\",\r\n    \"LastName\": \"User\",\r\n    \"Email\": \"test2.user@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/user/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Delete\",\r\n    \"LastName\": \"User\",\r\n    \"Email\": \"test2.user@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/user/delete/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"delete",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Account Actions",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "77fb7416-3a14-4668-9374-234d0073c26e",
								"exec": [
									"pm.environment.set(\"port\", 5000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "368dd7c5-a015-4c23-9824-2510b5b0c2a1",
								"exec": [
									"var userBody = pm.response.json();\r",
									"pm.environment.set(\"userId\", userBody.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"New\",\r\n    \"LastName\": \"User\",\r\n    \"Email\": \"test2.user@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/user/create",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a0c09c7b-3354-4f85-90f3-fa33fa160506",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "846777f3-5a91-4f9f-8cfd-1ee7730e3272",
								"exec": [
									"var account = pm.response.json();\r",
									"pm.environment.set(\"accountId\", account.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Name\": \"Account {{userId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/create",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95e36367-9405-4aaf-848d-92b076e3c6fe",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].userId).to.eql(userId);\r",
									"    pm.expect(responseJson[0].balance).to.be.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:{{port}}/api/user/{{userId}}/accounts",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"{{userId}}",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4de3487c-c374-4c1a-b178-0d03790d7414",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(userId);\r",
									"    pm.expect(responseJson.balance).to.be.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:{{port}}/api/account/{{accountId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initial Deposit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f1e5edc-2c37-4a66-85fa-b0016832552b",
								"exec": [
									"pm.test(\"Status code is 202\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"var accountId = pm.environment.get(\"accountId\");\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.id).to.be.eql(accountId);\r",
									"    pm.expect(responseJson.userId).to.eql(userId);\r",
									"    pm.expect(responseJson.balance).to.be.eql(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AccountId\": \"{{accountId}}\",\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Amount\": 5000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/deposit",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excessive Deposit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "423699ad-3248-425d-bf61-0626fce64b83",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AccountId\": \"{{accountId}}\",\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Amount\": 50000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/deposit",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excessive Withdrawal - 90%",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37e35b47-70eb-4a40-8e00-98694331daab",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AccountId\": \"{{accountId}}\",\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Amount\": 4600\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/withdraw",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid Withdrawal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "784d3ce7-6676-464f-bda4-f023a43216d9",
								"exec": [
									"pm.test(\"Status code is 202\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"var userId = pm.environment.get(\"userId\");\r",
									"var accountId = pm.environment.get(\"accountId\");\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.id).to.be.eql(accountId);\r",
									"    pm.expect(responseJson.userId).to.eql(userId);\r",
									"    pm.expect(responseJson.balance).to.be.eql(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AccountId\": \"{{accountId}}\",\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Amount\": 4400\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/withdraw",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excessive Withdrawal - $100 Min",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a972fff-1f89-49bb-ac55-9701a1d36d42",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AccountId\": \"{{accountId}}\",\r\n    \"UserId\": \"{{userId}}\",\r\n    \"Amount\": 510\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/account/withdraw",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac06bcaa-4625-4873-bc96-d42f0bc204d0",
								"exec": [
									"pm.test(\"Status code is 202\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(202);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:{{port}}/api/account/delete/{{accountId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"delete",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account after Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f905b7e2-afad-418a-9a59-86b3f5955651",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"  pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:{{port}}/api/account/{{accountId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"account",
								"{{accountId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\": \"Delete\",\r\n    \"LastName\": \"User\",\r\n    \"Email\": \"test2.user@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:{{port}}/api/user/delete/{{userId}}",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"delete",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}